apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'pmd'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'

repositories {
	mavenCentral()
	flatDir {
		dirs 'src/main/webapp/WEB-INF/lib'
	}
}

def javaVersion = JavaVersion.VERSION_1_8
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

dependencies {
	compile(

		// CSV
		[group: 'net.sf.opencsv', name: 'opencsv', version: '2.3'],

		// Commons
		[group: 'commons-codec', name: 'commons-codec', version: '1.10'],
		[group: 'org.apache.commons', name: 'commons-compress', version: '1.12'],
		[group: 'commons-io', name: 'commons-io', version: '2.5'],
		[group: 'commons-lang', name: 'commons-lang', version: '2.6'],

		// Dropbox
		[group: 'com.dropbox.core', name: 'dropbox-core-sdk', version: '2.1.1'],

		// Guice
		[group: 'com.google.inject', name: 'guice', version: '4.1.0'],

		// JSON
		[group: 'com.google.code.gson', name: 'gson', version: '2.7'],

		// JSTL
		[group: 'javax.servlet', name: 'jstl', version: '1.2'],

		// Logging
		[group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.6.2'],
		[group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.6.2'],
		[group: 'com.lmax', name: 'disruptor', version: '3.3.5'],

		// ORM
		[group: 'org.mybatis', name: 'mybatis', version: '3.4.1'],
		[group: 'mysql', name: 'mysql-connector-java', version: '6.0.3'],

		// Other
		[group: 'org.jfree', name: 'jfreechart', version: '1.0.19'],
		[group: 'com.sun.mail', name: 'javax.mail', version: '1.5.6'],

		// Reports
		[group: 'net.sf.jasperreports', name: 'jasperreports', version: '5.1.0'],
		[group: 'com.lowagie', name: 'itext', version: '2.1.7'],
		[group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.7'],

		// Scheduler
		[group: 'org.quartz-scheduler', name: 'quartz', version: '2.2.3'],

		// XML
		[group: 'org.dom4j', name: 'dom4j', version: '2.0.0'],
	)

	compileOnly(
		[group: 'org.apache.tomcat', name: 'tomcat-catalina', version: '8.5.4'],
		[group: 'org.projectlombok', name: 'lombok', version: '1.16.10'],
	)

	testCompile(
		testCompile(group: 'junit', name: 'junit', version: '4.12') {
			exclude group: 'org.hamcrest', module: 'hamcrest-core'
		},
		testCompile(group: 'org.mockito', name: 'mockito-core', version: '2.1.0-beta.119'){
			exclude group: 'org.hamcrest', module: 'hamcrest-core'
		},
		[group: 'org.apache.tomcat', name: 'tomcat-catalina', version: '8.5.4'],
		[group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3']
	)
}

war {
	ext.prod = project.hasProperty('prod');
	if (ext.prod) {
		archiveName = 'ROOT.war'
		rootSpec.exclude('log4j2.xml')
		rootSpec.exclude('log4j2-prod.xml.template')
		rootSpec.rename('log4j2-prod.xml', 'log4j2.xml')
	} else {
		archiveName = 'stock-tracker.war'
		rootSpec.exclude('log4j2-prod.xml')
		rootSpec.exclude('log4j2-prod.xml.template')
	}
	rootSpec.exclude('app.properties.template')
	exclude('**/bdd.sql')
}

checkstyle {
	sourceSets = [sourceSets.main]
	configFile = new File('checkstyle/sun_checks.xml')
}

test {
	finalizedBy jacocoTestReport
}
