<?xml version="1.0" encoding="UTF-8" ?>
<!--  
  Copyright 2013 Carl-Philipp Harmant
 
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
 
      http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ShareValue">
    <resultMap type="ShareValue" id="ShareValueResult">
		<result property="id" column="id" />
		<result property="userId" column="userId" />
		<result property="date" column="date" />
		<result property="liquidityMovement" column="liquidityMovement" />
		<result property="yield" column="yield" />
		<result property="buy" column="buy" />
		<result property="sell" column="sell" />
		<result property="taxe" column="taxe" />
		<result property="portfolioValue" column="portfolioValue" />
		<result property="shareQuantity" column="shareQuantity" />
		<result property="shareValue" column="shareValue" />
		<result property="monthlyYield" column="monthlyYield" />
		<result property="commentary" column="commentary" />
		<result property="details" column="details" />
		<association property="account" resultMap="AccountResult" />
	</resultMap>
	
	<resultMap type="Account" id="AccountResult">
		<result property="id" column="accountId" />
		<result property="userId" column="userId" />
		<result property="name" column="name" />
		<result property="currency" column="currency" />
		<result property="liquidity" column="liquidity" />
		<result property="del" column="del" />
	</resultMap>
	
	<insert id="insertOneShareValue" parameterType="ShareValue">
		insert into sharevalue (date, userId, accountId, liquidityMovement, yield, buy, sell, taxe,
		portfolioValue, shareQuantity, shareValue,
		monthlyYield, commentary, details)
		values (NOW(),#{userId}, #{account.id}, #{liquidityMovement}, #{yield},
		#{buy}, #{sell}, #{taxe}, #{portfolioValue}, #{shareQuantity}, #{shareValue}, #{monthlyYield}, #{commentary}, #{details})
	</insert>
	<insert id="insertOneShareValueWithDate" parameterType="ShareValue">
		insert into sharevalue (date, userId, accountId, liquidityMovement, yield, buy, sell,
		taxe, portfolioValue, shareQuantity, shareValue,
		monthlyYield, commentary, details)
		values (#{date}, #{userId}, #{account.id}, #{liquidityMovement},
		#{yield}, #{buy}, #{sell}, #{taxe}, #{portfolioValue}, #{shareQuantity}, #{shareValue}, #{monthlyYield}, #{commentary}, #{details})
	</insert>
	<select id="selectOneShareValue" parameterType="int" resultType="ShareValue">
		select * from sharevalue where id = #{id}
	</select>
	<update id="updateOneShareValue" parameterType="ShareValue">
		update sharevalue set accountName = #{accountName}, portfolioValue =
		#{portfolioValue}, shareQuantity =
		#{shareQuantity} , yield = #{yield }, buy = #{buy }, sell = #{sell}, taxe = #{taxe},
		shareValue = #{shareValue},
		monthlyYield = #{monthlyYield}, commentary =#{commentary}, details = #{details} where id = #{id};
	</update>
	<delete id="deleteOneShareValue" parameterType="ShareValue">
		delete from sharevalue where id = #{id}
	</delete>
	<select id="selectLastValue" parameterType="int" resultMap="ShareValueResult">
		select 
		sharevalue.id AS id,
		sharevalue.userId AS userId,
		sharevalue.date AS date,
		sharevalue.accountId AS accountId,
		sharevalue.liquidityMovement AS liquidityMovement,
		sharevalue.yield AS yield,
		sharevalue.buy AS buy,
		sharevalue.sell AS sell,
		sharevalue.taxe AS taxe,
		sharevalue.portfolioValue AS portfolioValue,
		sharevalue.shareQuantity AS shareQuantity,
		sharevalue.shareValue AS shareValue,
		sharevalue.monthlyYield AS monthlyYield,
		sharevalue.commentary AS commentary,
		sharevalue.details AS details,
		account.name AS name,
		account.currency AS currency,
		account.liquidity AS liquidity,
		account.del AS del
		from sharevalue
		JOIN account ON sharevalue.accountId = account.id
		where sharevalue.userId = #{userId} 
		order by date DESC limit 0,1
	</select>
	<select id="selectAllValue" parameterType="int" resultMap="ShareValueResult">
		select
		sharevalue.id AS id,
		sharevalue.userId AS userId,
		sharevalue.date AS date,
		sharevalue.accountId AS accountId,
		sharevalue.liquidityMovement AS liquidityMovement,
		sharevalue.yield AS yield,
		sharevalue.buy AS buy,
		sharevalue.sell AS sell,
		sharevalue.taxe AS taxe,
		sharevalue.portfolioValue AS portfolioValue,
		sharevalue.shareQuantity AS shareQuantity,
		sharevalue.shareValue AS shareValue,
		sharevalue.monthlyYield AS monthlyYield,
		sharevalue.commentary AS commentary,
		sharevalue.details AS details,
		account.name AS name,
		account.currency AS currency,
		account.liquidity AS liquidity,
		account.del AS del
		from sharevalue
		JOIN account ON sharevalue.accountId = account.id
		where sharevalue.userId = #{userId}
		order by date DESC
	</select>
	<select id="selectShareValueFrom" parameterType="Map" resultMap="ShareValueResult">
		select 
		sharevalue.id AS id,
		sharevalue.userId AS userId,
		sharevalue.date AS date,
		sharevalue.accountId AS accountId,
		sharevalue.liquidityMovement AS liquidityMovement,
		sharevalue.yield AS yield,
		sharevalue.buy AS buy,
		sharevalue.sell AS sell,
		sharevalue.taxe AS taxe,
		sharevalue.portfolioValue AS portfolioValue,
		sharevalue.shareQuantity AS shareQuantity,
		sharevalue.shareValue AS shareValue,
		sharevalue.monthlyYield AS monthlyYield,
		sharevalue.commentary AS commentary,
		sharevalue.details AS details,
		account.name AS name,
		account.currency AS currency,
		account.liquidity AS liquidity,
		account.del AS del
		from sharevalue
		JOIN account ON sharevalue.accountId = account.id
		where sharevalue.userId = #{userId} and date > #{from}
		order by date DESC
	</select>
	<select id="selectShareValueFromTo" parameterType="Map" resultMap="ShareValueResult">
		select
		sharevalue.id AS id,
		sharevalue.userId AS userId,
		sharevalue.date AS date,
		sharevalue.accountId AS accountId,
		sharevalue.liquidityMovement AS liquidityMovement,
		sharevalue.yield AS yield,
		sharevalue.buy AS buy,
		sharevalue.sell AS sell,
		sharevalue.taxe AS taxe,
		sharevalue.portfolioValue AS portfolioValue,
		sharevalue.shareQuantity AS shareQuantity,
		sharevalue.shareValue AS shareValue,
		sharevalue.monthlyYield AS monthlyYield,
		sharevalue.commentary AS commentary,
		sharevalue.details AS details,
		account.name AS name,
		account.currency AS currency,
		account.liquidity AS liquidity,
		account.del AS del
		from sharevalue
		JOIN account ON sharevalue.accountId = account.id
		where sharevalue.userId = #{userId} and date >= #{from} and date &lt;= #{to}
		order by date DESC
	</select>
</mapper>